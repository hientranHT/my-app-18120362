{"version":3,"sources":["index.js"],"names":["Square","props","className","isWinning","onClick","value","Board","i","this","winningSquares","includes","squares","n","elements","j","push","renderSquare","numbers","console","log","board","element","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","isDescending","istype3x3","slice","length","calculateWinner","calculateWinner5x5","setState","concat","location","step","temp","status","current","winner","moves","map","move","desc","jumpTo","player","CheckDraw","line","handleClick","reverse","sortHistory","changType","lines","a","b","c","d","e","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.249db5d9.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// class Square extends React.Component {\n\n//   constructor(props) {\n//     super(props);\n//   }\n\n//   render() {\n//     return (\n//       <button\n//       className=\"square\"\n//       onClick={() => this.props.onClick()}\n//       >\n//       {this.props.value}\n//       </button>\n//     );\n//   } \n// }\n\nfunction Square(props) {\n  return (\n    <button\n      className={\"square \" + (props.isWinning ? \"square--winning\" : null)}\n      onClick={props.onClick}\n    >\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        isWinning={this.props.winningSquares.includes(i)}\n        key={\"square \" + i}\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n  \n  element(i,n){\n    let elements=[];\n    for (let j = 0; j < n; j++) {\n      elements.push(this.renderSquare(n*i+j));\n    }\n    return elements\n  }\n\n  render() {\n    const n=this.props.numbers;\n    console.log(this.props.numbers);\n    let board=[];\n    for (let i = 0; i < n; i++) {\n        board.push(\n        <div className=\"board-row\">\n          {this.element(i,n)}\n        </div>)\n    }\n    return (\n      <div>\n        <div className=\"board-row\">\n          {board}\n        </div>\n      </div>\n  );\n  } \n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      isDescending: true,\n      istype3x3:true,\n      numbers: 3,\n    };\n  }\n  handleClick(i) {\n    const locations3x3 = [\n      [1, 1],\n      [2, 1],\n      [3, 1],\n      [1, 2],\n      [2, 2],\n      [3, 2],\n      [1, 3],\n      [2, 3],\n      [3, 3]\n    ];\n\n    const locations5x5 = [\n      [1, 1],\n      [2, 1],\n      [3, 1],\n      [4, 1],\n      [5, 1],\n      [1, 2],\n      [2, 2],\n      [3, 2],\n      [4, 2],\n      [5, 5],\n      [1, 3],\n      [2, 3],\n      [3, 3],\n      [4, 3],\n      [5, 5],\n      [1, 4],\n      [2, 4],\n      [3, 4],\n      [4, 4],\n      [5, 4],\n      [1, 5],\n      [2, 5],\n      [3, 5],\n      [4, 5],\n      [5, 5],\n    ];\n\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if(this.state.numbers===3)\n    {\n      if (calculateWinner(squares) || squares[i]) {\n        return;\n      }\n    }\n    else{\n      if (calculateWinner5x5(squares) || squares[i]) {\n        return;\n      }\n    }\n   \n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        location: this.state.istype3x3 ? locations3x3[i] : locations5x5[i],\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  sortHistory() {\n    this.setState({\n      isDescending: !this.state.isDescending,\n    });\n  }\n\n  changType(){\n    const temp = this.state.istype3x3? 5:3;\n    this.setState({\n      istype3x3: !this.state.istype3x3,\n      numbers: temp,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = this.state.istype3x3?calculateWinner(current.squares):calculateWinner5x5(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move \n      ? \"Go to move Step \" + move + \" ---- \" + history[move].location \n      : 'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>\n            {move === this.state.stepNumber ? <b>{desc}</b> : desc}\n          </button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner.player;\n    }\n\n    else {\n      if (CheckDraw(current.squares)) {\n        status = 'A Draw Game';\n      } else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n      }\n      \n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          {this.state.istype3x3 ? \n          <Board\n            winningSquares={winner ? winner.line : []}\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n            numbers={this.state.numbers}\n          /> : \n          <Board\n            winningSquares={winner ? winner.line : []}\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n            numbers={this.state.numbers}\n          />}\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{this.state.isDescending ? moves : moves.reverse()}</ol>\n            <button onClick={() => this.sortHistory()}>\n              Sort by: {this.state.isDescending ? \"Descending\" : \"Asending\"}\n            </button>\n        </div>\n        <button onClick={() => this.changType()}>\n            Chang Type: {this.state.istype3x3 ? \"5X5\" : \"3X3\"}\n        </button>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction CheckDraw(squares){\n  for (let i = 0; i < squares.length; i++) {\n    if(squares[i]==null)\n    {\n      return false;\n    }\n  }\n  return true;\n}\nfunction calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return { player: squares[a], line: [a, b, c] };\n      }\n    }\n    return null;\n}\n\nfunction calculateWinner5x5(squares) {\n    const lines = [\n      [0, 1, 2, 3, 4],\n      [5, 6, 7, 8, 9],\n      [10, 11, 12,13,14],\n      [15, 16, 17, 18, 19],\n      [20, 21, 22, 23, 24],\n      [0, 5, 10, 15, 20],\n      [1, 6, 11, 16, 21],\n      [2, 7, 12, 17, 22],\n      [3, 8, 13, 18, 23],\n      [4, 9, 14, 19, 24],\n      [0, 6, 12, 18, 24],\n      [4, 8, 12, 16, 20],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c, d, e] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c] \n        && squares[a] === squares[d] && squares[a] === squares[e]) {\n        return { player: squares[a], line: [a, b, c, d, e] };\n      }\n    }\n    return null;\n}\n"],"sourceRoot":""}